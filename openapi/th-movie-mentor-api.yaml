openapi: 3.0.0

info:
  title: TH-Movie Mentor API
  description: This API provides information about Thai movies including details about specific movies.
  version: 3.0.0

servers:
  - url: http://127.0.0.1:8080/TH-Movie

paths:
  /movies:
    get:
      summary: Get a list of all movies
      operationId: controller.get_movies
      responses:
        "200":
          description: An array of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"

  /movies/{movieId}:
    get:
      summary: Get information about a specific movie
      operationId: controller.get_movie_detail
      parameters:
        - in: path
          name: movieId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A specific movie
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
          links:
            genres:
              operationId: controller.get_genres_of_movie
              parameters:
                basinId: $response.body#/movieId
            actors:
              operationId: controller.get_actors_of_movie
              parameters:
                basinId: $response.body#/movieId
            platforms:
              operationId: controller.get_platform_of_movie
              parameters:
                basinId: $response.body#/movieId

  /genresOfMovie/{movieId}:
    get:
      summary: Get a list of movies in a specific genre
      operationId: controller.get_genres_of_movie
      parameters:
        - in: path
          name: movieId
          required: true
          schema:
            type: string
      responses:
        "200":
            description: An array of movies by genre
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Genre"

  /actorsOfMovie/{movieId}:
    get:
      summary: Get a list of actor for specific movie
      operationId: controller.get_actors_of_movie
      parameters:
        - in: path
          name: movieId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An array of actor for specific movie
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Actor"
    
  /platformsOfMovie/{movieId}:
      get:
        summary: Get a list of platforms/applications where a specific movie is available
        operationId: controller.get_platforms_of_movie
        parameters:
          - in: path
            name: movieId
            required: true
            schema:
              type: string
        responses:
          "200":
            description: A list of platforms/applications for a specific movie
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Platform"

  /movies/genre/{genreId}:
    get:
      summary: Get a list of movies in a specific genre
      operationId: controller.get_movies_by_genre
      parameters:
        - in: path
          name: genreId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An array of movies by genre
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"

  /movies/actor/{actorId}:
    get:
      summary: Get a list of movies starring a specific actor
      operationId: controller.get_movies_by_actor
      parameters:
        - in: path
          name: actorId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An array of movies starring a specific actor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"

  /movies/platform/{platformId}:
    get:
      summary: Get a list of movies available on a specific platform
      operationId: controller.get_movies_by_platform
      parameters:
        - in: path
          name: platformId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An array of movies available on a specific platform
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"

  /movies/year/{year}:
    get:
      summary: Get a list of movies released in a specific year
      operationId: controller.get_movies_by_year
      parameters:
        - in: path
          name: year
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: An array of movies from a specific year
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"

  /movies/age/{age}:
    get:
      summary: Get a list of movies popular with a specific age
      operationId: controller.get_movies_by_age
      parameters:
        - in: path
          name: age
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: An array of movies popular with a specific age
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"

  /movies/gender/{gender}:
    get:
      summary: Get a list of movies popular with a specific gender
      operationId: controller.get_movies_by_gender
      parameters:
        - in: path
          name: gender
          required: true
          schema:
            type: string
            enum: [male, female, other]
      responses:
        "200":
          description: An array of movies popular with a specific gender
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"

  /movies/gender/{gender}/age/{age}:
    get:
      summary: Get a list of movies popular with a specific gender and age
      operationId: controller.get_movies_by_gender_age
      parameters:
        - in: path
          name: gender
          required: true
          schema:
            type: string
            enum: [male, female, other]
        - in: path
          name: age
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: An array of movies popular with a specific gender and age
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"

components:
  schemas:
    Movie:
      type: object
      properties:
        movieId:
          type: string
        titleTh:
          type: string
        titleEn:
          type: string

    Actor:
      type: object
      properties:
        actorId:
          type: string
        nickNameTh:
          type: string
        fullNameTh:
          type: string
        nickNameEn:
          type: string
        fullNameEn:
          type: string
  
    Platform:
      type: object
      properties:
        platformId:
          type: string
        platformName:
          type: string

    Genre:
      type: object
      properties:
        genreId:
          type: string
        genreName:
          type: string